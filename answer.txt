1. Создание ссылок:
- создать файл file1 и наполнить его произвольным содержимым.
- скопировать файл file1 в file2.
- создать символическую ссылку file3 на file1.
- создать жесткую ссылку file4 на file1.
- посмотреть, какие айноды у файлов.
- удалить file1. Что стало с остальными созданными файлами? Попробовать вывести их содержимое на экран.
- удалить все остальные файлы

$echo 123 > file1 && cat file1 > file2 && ln -s file1 file3 && ln file1 file4

2. Работа со ссылками:
- создать файл file1 и наполнить его произвольным содержимым.
- создать символическую ссылку file1_link, указывающую на этот файл.
- переместить ссылку в другую директорию. Работает ли она? Почему? Если не работает, как сделать так, чтобы работала?

$echo 123 > file1 && ln -s file1 file1_link && mv file1 /tmp
+ Не работает, по тому, что ссылка указывает, на несуществующий inode.
+ Необходимо вернуть файл обратно или перезаписать ссылку (например ln -sfi <file> <link>)

3. Права файлов:
- создать два произвольных файла.
- первому файлу присвоить права на чтение, запись для владельца и группы; на чтение для всех. Сделать это в численном и символьном виде.
- второму файлу присвоить права на чтение, запись только для владельца. Сделать это в численном и символьном виде.

$echo 123 > file1 && echo 234 > file2 && chmod 660 file1 && chmod u=rw,g-rw,o-rw file2

4. * Создать группу developer, несколько пользователей, входящих в эту группу. Создать директорию для совместной работы. Сделать так, чтобы созданные одними пользователями файлы могли изменять другие пользователи этой группы.

#addgroup developer && useradd -G developer user1 && useradd -G developer user2 && mkdir -m 070 /projects && chown :developer /projects


5. * Создать в директории для совместной работы поддиректорию для обмена файлами, но чтобы удалять файлы могли только их создатели.

#mkdir -m 1070 /projects1 && chown :developer /projects1


6. * Создать директорию, в которой есть несколько файлов. Сделать так, чтобы открыть файлы можно только, зная имя файла, а через ls список файлов посмотреть нельзя.

#mkdir -m 001 /stranger && touch 1 > /stranger/file1 && touch 1 > /stranger/file2

Примечание: Задания с 4 по 6 даны для тех, кому упражнений 1-4 показалось недостаточно.